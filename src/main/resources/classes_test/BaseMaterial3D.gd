extends Material
class_name BaseMaterial3D
const TEXTURE_ALBEDO = 0;
const TEXTURE_METALLIC = 1;
const TEXTURE_ROUGHNESS = 2;
const TEXTURE_EMISSION = 3;
const TEXTURE_NORMAL = 4;
const TEXTURE_RIM = 5;
const TEXTURE_CLEARCOAT = 6;
const TEXTURE_FLOWMAP = 7;
const TEXTURE_AMBIENT_OCCLUSION = 8;
const TEXTURE_HEIGHTMAP = 9;
const TEXTURE_SUBSURFACE_SCATTERING = 10;
const TEXTURE_SUBSURFACE_TRANSMITTANCE = 11;
const TEXTURE_BACKLIGHT = 12;
const TEXTURE_REFRACTION = 13;
const TEXTURE_DETAIL_MASK = 14;
const TEXTURE_DETAIL_ALBEDO = 15;
const TEXTURE_DETAIL_NORMAL = 16;
const TEXTURE_ORM = 17;
const TEXTURE_MAX = 18;
const TEXTURE_FILTER_NEAREST = 0;
const TEXTURE_FILTER_LINEAR = 1;
const TEXTURE_FILTER_NEAREST_WITH_MIPMAPS = 2;
const TEXTURE_FILTER_LINEAR_WITH_MIPMAPS = 3;
const TEXTURE_FILTER_NEAREST_WITH_MIPMAPS_ANISOTROPIC = 4;
const TEXTURE_FILTER_LINEAR_WITH_MIPMAPS_ANISOTROPIC = 5;
const TEXTURE_FILTER_MAX = 6;
const DETAIL_UV_1 = 0;
const DETAIL_UV_2 = 1;
const TRANSPARENCY_DISABLED = 0;
const TRANSPARENCY_ALPHA = 1;
const TRANSPARENCY_ALPHA_SCISSOR = 2;
const TRANSPARENCY_ALPHA_HASH = 3;
const TRANSPARENCY_ALPHA_DEPTH_PRE_PASS = 4;
const TRANSPARENCY_MAX = 5;
const SHADING_MODE_UNSHADED = 0;
const SHADING_MODE_PER_PIXEL = 1;
const SHADING_MODE_PER_VERTEX = 2;
const SHADING_MODE_MAX = 3;
const FEATURE_EMISSION = 0;
const FEATURE_NORMAL_MAPPING = 1;
const FEATURE_RIM = 2;
const FEATURE_CLEARCOAT = 3;
const FEATURE_ANISOTROPY = 4;
const FEATURE_AMBIENT_OCCLUSION = 5;
const FEATURE_HEIGHT_MAPPING = 6;
const FEATURE_SUBSURFACE_SCATTERING = 7;
const FEATURE_SUBSURFACE_TRANSMITTANCE = 8;
const FEATURE_BACKLIGHT = 9;
const FEATURE_REFRACTION = 10;
const FEATURE_DETAIL = 11;
const FEATURE_MAX = 12;
const BLEND_MODE_MIX = 0;
const BLEND_MODE_ADD = 1;
const BLEND_MODE_SUB = 2;
const BLEND_MODE_MUL = 3;
const ALPHA_ANTIALIASING_OFF = 0;
const ALPHA_ANTIALIASING_ALPHA_TO_COVERAGE = 1;
const ALPHA_ANTIALIASING_ALPHA_TO_COVERAGE_AND_TO_ONE = 2;
const DEPTH_DRAW_OPAQUE_ONLY = 0;
const DEPTH_DRAW_ALWAYS = 1;
const DEPTH_DRAW_DISABLED = 2;
const CULL_BACK = 0;
const CULL_FRONT = 1;
const CULL_DISABLED = 2;
const FLAG_DISABLE_DEPTH_TEST = 0;
const FLAG_ALBEDO_FROM_VERTEX_COLOR = 1;
const FLAG_SRGB_VERTEX_COLOR = 2;
const FLAG_USE_POINT_SIZE = 3;
const FLAG_FIXED_SIZE = 4;
const FLAG_BILLBOARD_KEEP_SCALE = 5;
const FLAG_UV1_USE_TRIPLANAR = 6;
const FLAG_UV2_USE_TRIPLANAR = 7;
const FLAG_UV1_USE_WORLD_TRIPLANAR = 8;
const FLAG_UV2_USE_WORLD_TRIPLANAR = 9;
const FLAG_AO_ON_UV2 = 10;
const FLAG_EMISSION_ON_UV2 = 11;
const FLAG_ALBEDO_TEXTURE_FORCE_SRGB = 12;
const FLAG_DONT_RECEIVE_SHADOWS = 13;
const FLAG_DISABLE_AMBIENT_LIGHT = 14;
const FLAG_USE_SHADOW_TO_OPACITY = 15;
const FLAG_USE_TEXTURE_REPEAT = 16;
const FLAG_INVERT_HEIGHTMAP = 17;
const FLAG_SUBSURFACE_MODE_SKIN = 18;
const FLAG_PARTICLE_TRAILS_MODE = 19;
const FLAG_MAX = 20;
const DIFFUSE_BURLEY = 0;
const DIFFUSE_LAMBERT = 1;
const DIFFUSE_LAMBERT_WRAP = 2;
const DIFFUSE_TOON = 3;
const SPECULAR_SCHLICK_GGX = 0;
const SPECULAR_BLINN = 1;
const SPECULAR_PHONG = 2;
const SPECULAR_TOON = 3;
const SPECULAR_DISABLED = 4;
const BILLBOARD_DISABLED = 0;
const BILLBOARD_ENABLED = 1;
const BILLBOARD_FIXED_Y = 2;
const BILLBOARD_PARTICLES = 3;
const TEXTURE_CHANNEL_RED = 0;
const TEXTURE_CHANNEL_GREEN = 1;
const TEXTURE_CHANNEL_BLUE = 2;
const TEXTURE_CHANNEL_ALPHA = 3;
const TEXTURE_CHANNEL_GRAYSCALE = 4;
const EMISSION_OP_ADD = 0;
const EMISSION_OP_MULTIPLY = 1;
const DISTANCE_FADE_DISABLED = 0;
const DISTANCE_FADE_PIXEL_ALPHA = 1;
const DISTANCE_FADE_PIXEL_DITHER = 2;
const DISTANCE_FADE_OBJECT_DITHER = 3;

var albedo_color: Color;
var albedo_tex_force_srgb: bool;
var albedo_texture: Texture2D;
var alpha_antialiasing_edge: float;
var alpha_antialiasing_mode: int;
var alpha_hash_scale: float;
var alpha_scissor_threshold: float;
var anisotropy: float;
var anisotropy_enabled: bool;
var anisotropy_flowmap: Texture2D;
var ao_enabled: bool;
var ao_light_affect: float;
var ao_on_uv2: bool;
var ao_texture: Texture2D;
var ao_texture_channel: int;
var backlight: Color;
var backlight_enabled: bool;
var backlight_texture: Texture2D;
var billboard_keep_scale: bool;
var billboard_mode: int;
var blend_mode: int;
var clearcoat: float;
var clearcoat_enabled: bool;
var clearcoat_gloss: float;
var clearcoat_texture: Texture2D;
var cull_mode: int;
var depth_draw_mode: int;
var detail_albedo: Texture2D;
var detail_blend_mode: int;
var detail_enabled: bool;
var detail_mask: Texture2D;
var detail_normal: Texture2D;
var detail_uv_layer: int;
var diffuse_mode: int;
var disable_ambient_light: bool;
var disable_receive_shadows: bool;
var distance_fade_max_distance: float;
var distance_fade_min_distance: float;
var distance_fade_mode: int;
var emission: Color;
var emission_enabled: bool;
var emission_energy: float;
var emission_on_uv2: bool;
var emission_operator: int;
var emission_texture: Texture2D;
var fixed_size: bool;
var grow: bool;
var grow_amount: float;
var heightmap_deep_parallax: bool;
var heightmap_enabled: bool;
var heightmap_flip_binormal: bool;
var heightmap_flip_tangent: bool;
var heightmap_flip_texture: bool;
var heightmap_max_layers: int;
var heightmap_min_layers: int;
var heightmap_scale: float;
var heightmap_texture: Texture2D;
var metallic: float;
var metallic_specular: float;
var metallic_texture: Texture2D;
var metallic_texture_channel: int;
var no_depth_test: bool;
var normal_enabled: bool;
var normal_scale: float;
var normal_texture: Texture2D;
var orm_texture: Texture2D;
var particles_anim_h_frames: int;
var particles_anim_loop: bool;
var particles_anim_v_frames: int;
var point_size: float;
var proximity_fade_distance: float;
var proximity_fade_enable: bool;
var refraction_enabled: bool;
var refraction_scale: float;
var refraction_texture: Texture2D;
var refraction_texture_channel: int;
var rim: float;
var rim_enabled: bool;
var rim_texture: Texture2D;
var rim_tint: float;
var roughness: float;
var roughness_texture: Texture2D;
var roughness_texture_channel: int;
var shading_mode: int;
var shadow_to_opacity: bool;
var specular_mode: int;
var subsurf_scatter_enabled: bool;
var subsurf_scatter_skin_mode: bool;
var subsurf_scatter_strength: float;
var subsurf_scatter_texture: Texture2D;
var subsurf_scatter_transmittance_boost: float;
var subsurf_scatter_transmittance_color: Color;
var subsurf_scatter_transmittance_depth: float;
var subsurf_scatter_transmittance_enabled: bool;
var subsurf_scatter_transmittance_texture: Texture2D;
var texture_filter: int;
var texture_repeat: bool;
var transparency: int;
var use_particle_trails: bool;
var use_point_size: bool;
var uv1_offset: Vector3;
var uv1_scale: Vector3;
var uv1_triplanar: bool;
var uv1_triplanar_sharpness: float;
var uv1_world_triplanar: bool;
var uv2_offset: Vector3;
var uv2_scale: Vector3;
var uv2_triplanar: bool;
var uv2_triplanar_sharpness: float;
var uv2_world_triplanar: bool;
var vertex_color_is_srgb: bool;
var vertex_color_use_as_albedo: bool;

func get_feature(feature: int) -> bool:
    pass;
func get_flag(flag: int) -> bool:
    pass;
func get_texture(param: int) -> Texture2D:
    pass;
func set_feature(feature: int, enable: bool) -> void:
    pass;
func set_flag(flag: int, enable: bool) -> void:
    pass;
func set_texture(param: int, texture: Texture2D) -> void:
    pass;
