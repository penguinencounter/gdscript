<?php

$filename  = "@GdScript.xml";
$target = "./src/main/kotlin/gdscript/utils/GdAnnotationUtil.kt";

$baseContent = "package gdscript.utils

import gdscript.model.GdAnnotation

/**
 * Do not edit manually
 * Generated by annotationParser.php
 */
object GdAnnotationUtil {

    fun get(name: String): GdAnnotation? {
        return ANNOTATIONS[name]
    }

    // Name -> GdAnnotation
    val ANNOTATIONS = mapOf(
%s
    )

}
";

$data    = "";
$content = file_get_contents(sprintf("./classes/%s", $filename));
$xml     = (array)simplexml_load_string($content);

foreach ($xml['annotations'] ?? [] as $value) {
    $value = (array)$value;
    $att   = (array)$value['@attributes'];

    $name = substr($att['name'], 1);
    $qualifiers = $att['qualifiers'] ?? '' === 'vararg';
    $vararg = $qualifiers ? 'true' : 'false';
    $data .= "        \"$name\" to GdAnnotation($vararg, linkedMapOf(";

    $any = false;
    foreach ($value['param'] ?? [] as $index => $param) {
        $any = true;
        if ($index === 0) $data .= "\n";

        $param = (array) $param;
        $p_att = $param['@attributes'];
        $name = $p_att['name'];
        $type = $p_att['type'] ?? 'Variant';
        $data .= "            \"$name\" to \"$type\",\n";
    }
    if ($any) {
        $data .= "        ";
    }
    $data .= ")),\n";
}

file_put_contents($target, sprintf($baseContent, $data));
